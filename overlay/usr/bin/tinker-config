#!/bin/bash

INTERACTIVE=True
ASK_TO_REBOOT=0

TOOL_VERSION="2.1.0"
TOOL_NAME="Asus Tinker Board Software Configuration Tool (tinker-config)"
USER_NAME="linaro"

get_hostname() {
    cat /etc/hostname | tr -d " \t\n\r"
}

do_change_hostname() {
  if [ "$INTERACTIVE" = True ]; then
  whiptail --msgbox "\
Please note: RFCs mandate that a hostname's labels \
may contain only the ASCII letters 'a' through 'z' (case-insensitive),
the digits '0' through '9', and the hyphen.
Hostname labels cannot begin or end with a hyphen.
No other symbols, punctuation characters, or blank spaces are permitted.\
" 20 70 1
  fi
  CURRENT_HOSTNAME=`cat /etc/hostname | tr -d " \t\n\r"`
  if [ "$INTERACTIVE" = True ]; then
    NEW_HOSTNAME=$(whiptail --inputbox "Please enter a hostname" 20 60 "$CURRENT_HOSTNAME" 3>&1 1>&2 2>&3)
  else
    NEW_HOSTNAME=$1
    true
  fi
  if [ $? -eq 0 ]; then
    echo $NEW_HOSTNAME > /etc/hostname
    sed -i "s/127.0.1.1.*$CURRENT_HOSTNAME/127.0.1.1\t$NEW_HOSTNAME/g" /etc/hosts
    ASK_TO_REBOOT=1
  fi
}

do_change_pass() {
  whiptail --msgbox "You will now be asked to enter a new password for the $USER_NAME user" 20 60 1
  passwd $USER_NAME &&
  whiptail --msgbox "Password changed successfully" 20 60 1
}

do_update() {
  apt-get update

}

#
# do_internationalisation_menu functions
#

do_change_locale() {
  dpkg-reconfigure locales
  return 0
}

do_change_timezone() {
  dpkg-reconfigure tzdata
  return 0
}

#
# do_advanced_menu functions
#

do_wlan_verbose_log(){
  return 0
}

do_expand_rootfs() {
	return 0
}

do_cus_resolution() {
  if DISPLAY=:0.0 xrandr | grep -q connected ; then
    if [ "$INTERACTIVE" = True ]; then
      whiptail --title "Warning" --msgbox "\
Be aware that your moniter may not support some resolusion and it will cause the monitor getting no display.
By the time, you can just replug the HDMI cable to get the defult resolusion setting.\
" 20 70 1

      CUS_RES=$(whiptail --inputbox "Please enter the custom screen resolution in the following format: <width> <height> <refresh_rate>" 20 60 "1600 900 60" 3>&1 1>&2 2>&3)
      exitstatus=$?
    else
      CUS_RES="$1 $2 $3"
      exitstatus=0
    fi

    if [ $exitstatus = 0 ]; then

        MODE_ARG=$(cvt $CUS_RES | grep Modeline | sed 's/Modeline "\([0-9]\+\)x\([0-9]\+\)_\([0-9]\+\).[0-9]*"/\1x\2/')
        MODE_NAME=$(echo $MODE_ARG | sed 's/\([0-9]\+\)x\([0-9]\+\).*/\1x\2/')
        hdmi=$(DISPLAY=:0.0 xrandr | grep -w connected | sed 's/\(^.*\) connected.*/\1/')

        if ! DISPLAY=:0.0 xrandr | grep -q $MODE_NAME ; then
          DISPLAY=:0.0 xrandr --newmode $MODE_ARG
        fi
        DISPLAY=:0.0 xrandr --addmode $hdmi $MODE_NAME
        DISPLAY=:0.0 xrandr --output $hdmi --mode $MODE_NAME
    fi
  fi
  return 0
}

do_resolution() {
  INTERACTIVE=True
  if [ "$INTERACTIVE" = True ]; then
    if DISPLAY=:0.0 xrandr | grep -q connected ; then
      ores=$(DISPLAY=:0.0 xrandr | grep current | sed 's/.*current \([0-9]\+\) x \([0-9]\+\).*/\1x\2/')
      hdmi=$(DISPLAY=:0.0 xrandr | grep -w connected | sed 's/\(^.*\) connected.*/\1/')
      value=$(DISPLAY=:0.0 xrandr | sed '1,2d' | grep '^[ ]*[0-9]' | sed 's/\([0-9]\+\)x\([0-9i]\+\)[ ]*\([0-9]\+\).\([0-9]\+\).* / \1x\2  \3.\4Hz/')

      FUN=$(whiptail --title "Asus Tinkerboard Software Configuration Tool (tinker-config)" \
      --menu "Choose screen resolution" $WT_HEIGHT $WT_WIDTH $WT_MENU_HEIGHT \
      $value "Custom    " "Add and set a custom screen resolution" 3>&1 1>&2 2>&3)
      RET=$?

      if [ $RET -eq 1 ]; then
          return 0
      elif [ $RET -eq 0 ]; then
         if [ "$FUN" = "Custom    " ]; then
          do_cus_resolution
         else
          DISPLAY=:0.0 xrandr --output $hdmi --mode $FUN
         fi
      else
        return 1
      fi
    else
      whiptail --msgbox "There is no HDMI connected" 20 60 2
      return 0
    fi
  fi
}

#
# Other functions
#

calc_wt_size() {
  # NOTE: it's tempting to redirect stderr to /dev/null, so supress error
  # output from tput. However in this case, tput detects neither stdout or
  # stderr is a tty and so only gives default 80, 24 values
  WT_HEIGHT=20
  WT_WIDTH=$(tput cols)

  if [ -z "$WT_WIDTH" ] || [ "$WT_WIDTH" -lt 60 ]; then
    WT_WIDTH=80
  fi
  if [ "$WT_WIDTH" -gt 178 ]; then
    WT_WIDTH=120
  fi
  WT_MENU_HEIGHT=$(($WT_HEIGHT-10))
}

do_finish() {
  if [ $ASK_TO_REBOOT -eq 1 ]; then
    whiptail --yesno "Would you like to reboot now?" 20 60 2
    if [ $? -eq 0 ]; then # yes
      sync
      reboot
    fi
  fi
  exit 0
}

do_internationalisation_menu() {
  FUN=$(whiptail --title "$TOOL_NAME" --menu "Internationalisation Options" $WT_HEIGHT $WT_WIDTH $WT_MENU_HEIGHT --cancel-button Back --ok-button Select \
    "I1 Change Locale" "Set up language and regional settings to match your location" \
    "I2 Change Timezone" "Set up timezone to match your location" \
    3>&1 1>&2 2>&3)
  RET=$?
  if [ $RET -eq 1 ]; then
    return 0
  elif [ $RET -eq 0 ]; then
    case "$FUN" in
      I1\ *) do_change_locale ;;
      I2\ *) do_change_timezone ;;
      *) whiptail --msgbox "Programmer error: unrecognized option" 20 60 1 ;;
    esac || whiptail --msgbox "There was an error running option $FUN" 20 60 1
  fi
}

do_about() {
  whiptail --msgbox "\
Asus Tinker Board Software Configuration Tool v$TOOL_VERSION \n\nThis tool provides a straight-forward way of doing initial configuration of the Asus Tinker Board. Although it can be run at any time, some of the options may have difficulties if you have heavily customised your installation.\
  " 20 70 1
}

do_advanced_menu() {
    FUN=$(whiptail --title "Asus Tinkerboard Software Configuration Tool (tinker-config)" --menu "Advanced Options" $WT_HEIGHT $WT_WIDTH $WT_MENU_HEIGHT --cancel-button Back --ok-button Select \
      "A1 Expand Filesystem" "Ensures that all of the SD card storage is available to the OS" \
      "A2 Resolution" "Set a specific screen resolution" \
      "A3 Wlan Verbose Log" "Enable/disable wlan verbose log" \
      3>&1 1>&2 2>&3)
    RET=$?
    if [ $RET -eq 1 ]; then
      return 0
    elif [ $RET -eq 0 ]; then
      case "$FUN" in
        A1\ *) do_expand_rootfs ;;
        A2\ *) do_resolution ;;
        A3\ *) do_wlan_verbose_log ;;
        *) whiptail --msgbox "Programmer error: unrecognized option" 20 60 1 ;;
      esac || whiptail --msgbox "There was an error running option $FUN" 20 60 1
    fi
}

#
# Main function
#

# Everything else needs to be run as root
if [ $(id -u) -ne 0 ]; then
  printf "Script must be run as root. Try 'sudo tinker-config'\n"
  exit 1
fi

#
# Interactive use loop
#
if [ "$INTERACTIVE" = True ]; then
  calc_wt_size

  whiptail --msgbox "Welcome to Asus Tinker Board Software Configuration Tool (Experimental).

This version is based off the popular version from the SBC (single board computer) community and is still in its development stage.

Currently some features may not be available as they were not originally designed for this board or are still under development. Please understand that you may encounter situations where some features cannot be used.

" $WT_HEIGHT $WT_WIDTH 1

  while true; do
    FUN=$(whiptail --title "$TOOL_NAME" --menu "Setup Options" $WT_HEIGHT $WT_WIDTH $WT_MENU_HEIGHT --cancel-button Finish --ok-button Select \
      "1 Hostname" "Set the visible name for this Tinker Board on a network" \
      "2 Change User Password" "Change password for the default user ($USER_NAME)" \
      "3 Internationalisation Options" "Set up language and regional settings to match your location" \
      "4 Advanced Options" "Configure advanced settings" \
      "5 About tinker-config" "Information about this configuration tool" \
      3>&1 1>&2 2>&3)
    RET=$?
    if [ $RET -eq 1 ]; then
      do_finish
    elif [ $RET -eq 0 ]; then
      case "$FUN" in
        1\ *) do_change_hostname ;;
        2\ *) do_change_pass ;;
        3\ *) do_internationalisation_menu ;;
        4\ *) do_advanced_menu ;;
        5\ *) do_about ;;
        *) whiptail --msgbox "Programmer error: unrecognized option" 20 60 1 ;;
      esac || whiptail --msgbox "There was an error running option $FUN" 20 60 1
    else
      exit 1
    fi
  done
fi
